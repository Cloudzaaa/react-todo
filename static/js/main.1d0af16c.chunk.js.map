{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.js","components/TodoListItem/index.js","components/TodoListItem/TodoListItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/ItemAddForm/index.js","components/ItemAddForm/ItemAddForm.js","components/ItemStatusFilter/index.js","components/ItemStatusFilter/ItemStatusFilter.js","components/app/App.js","index.js"],"names":["AppHeader","_ref","todo","done","react_default","a","createElement","className","SearchPanel","state","searchText","onSearch","e","searchtext","target","value","_this","setState","props","onSearchChange","mdbreact_esm","placeholder","onChange","this","Component","TodoListItem","_this$props","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","size","color","icon","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","components_TodoListItem","assign","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAdd","required","type","ItemStatusFilter","buttons","name","filter","onFilter","App","maxId","todoData","createTodoItem","items","deleteItem","idx","findIndex","el","concat","toConsumableArray","slice","addItem","text","newItem","_ref2","_ref3","toggleProperty","_ref4","arr","propName","oldItem","objectSpread","defineProperty","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","length","todoCount","components_AppHeader","components_SearchPanel","components_ItemStatusFilter","components_TodoList","components_ItemAddForm","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1d0af16c.chunk.js","sourcesContent":["import AppHeader from './AppHeader';\nexport default AppHeader;","import React from 'react';\nimport './style.css';\n\nconst AppHeader = ({todo, done}) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Todo app</h1>\n            <p>{todo} more to do, {done} done}</p>\n        </div>\n    );\n\n};\n\nexport default AppHeader;","import SearchPanel from './SearchPanel';\nexport default SearchPanel;","import React, {Component} from 'react';\r\nimport {MDBInput} from 'mdbreact';\r\nimport './style.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    state = {\r\n        searchText: '',\r\n    };\r\n\r\n    onSearch = (e) => {\r\n        const searchtext = e.target.value;\r\n        this.setState({\r\n            searchText: searchtext,\r\n        });\r\n\r\n        this.props.onSearchChange(searchtext);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"search-panel\">\r\n                <MDBInput\r\n                    placeholder={'search'}\r\n                    onChange={this.onSearch}\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n};","import TodoListItem from './TodoListItem';\nexport default TodoListItem;","import React , { Component } from 'react';\nimport {MDBBtn, MDBBtnGroup, MDBIcon} from 'mdbreact';\nimport './style.css';\n\nexport default class TodoListItem extends Component {\n    render() {\n        const {label, onDeleted,\n            onToggleImportant,\n            onToggleDone,\n            done, important} = this.props;\n        let classNames = 'todo-list-item__label';\n        if (done) {\n            classNames += ' done';\n        }\n\n        if (important) {\n            classNames += ' important';\n        }\n\n        return (\n            <div className=\"todo-list-item d-flex\">\n                <span\n                    className={classNames}\n                    onClick={onToggleDone}\n                >\n                    {label}\n                </span>\n                <MDBBtnGroup size=\"sm\">\n                    <MDBBtn color=\"danger\" size=\"sm\"\n                    onClick={onDeleted}>\n                        <MDBIcon icon=\"trash-alt\" />\n                    </MDBBtn>\n                    <MDBBtn color=\"warning\" size=\"sm\"\n                    onClick={onToggleImportant}>\n                        <MDBIcon icon=\"exclamation\" />\n                    </MDBBtn>\n                </MDBBtnGroup>\n            </div>\n        )\n    }\n}\n","import TodoList from './TodoList';\nexport default TodoList;","import React from 'react';\nimport TodoListItem from '../TodoListItem';\nimport {MDBListGroup, MDBListGroupItem} from \"mdbreact\";\n\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\n    const elements = todos.map((item) => {\n    const {id, ...itemProps} = item;\n        return (\n            <MDBListGroupItem key={item.id}>\n                <TodoListItem\n                    { ...itemProps }\n                    onDeleted={() => onDeleted(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                    onToggleDone={() => onToggleDone(id)}\n                />\n            </MDBListGroupItem>\n        )\n    });\n    return (\n        <MDBListGroup>\n            {elements}\n        </MDBListGroup>\n    )\n};\n\nexport default TodoList;","import ItemAddForm from './ItemAddForm';\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBInput} from 'mdbreact';\r\nimport './style.css'\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state = {\r\n      label: '',\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({label: e.target.value});\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.label);\r\n        this.setState({label: ''});\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <form className=\"item-add-form\" onSubmit={this.onSubmit}>\r\n                <MDBInput\r\n                    placeholder={'What to do?'}\r\n                    onChange={this.onLabelChange}\r\n                    value={this.state.label}\r\n                    required\r\n                />\r\n                <MDBBtn color=\"primary\" size=\"md\" type=\"submit\">Add</MDBBtn>\r\n            </form>\r\n        );\r\n    }\r\n};\r\n","import ItemStatusFilter from './ItemStatusFilter';\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\nimport {MDBBtnGroup, MDBBtn} from \"mdbreact\";\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n    buttons = [\r\n        { name: 'all', label: 'All'},\r\n        { name: 'active', label: 'Active'},\r\n        { name: 'done', label: 'Done'},\r\n    ];\r\n\r\n    render() {\r\n        const {filter, onFilter} = this.props;\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const color = isActive ? 'info' : 'primary';\r\n            return (\r\n                <MDBBtn\r\n                    color={color}\r\n                    key={name}\r\n                    onClick={() => onFilter(name)}\r\n                >{label}</MDBBtn>\r\n            )\r\n        });\r\n\r\n        return(\r\n            <MDBBtnGroup size=\"sm\">\r\n                {buttons}\r\n            </MDBBtnGroup>\r\n        );\r\n    };\r\n};","import React, {Component} from 'react';\nimport AppHeader from '../AppHeader';\nimport SearchPanel from '../SearchPanel';\nimport TodoList from '../TodoList';\nimport ItemAddForm from '../ItemAddForm';\nimport ItemStatusFilter from '../ItemStatusFilter';\nimport './style.css';\n\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make food'),\n            this.createTodoItem('Clean table'),\n        ],\n        searchText: '',\n        filter: 'all',\n    };\n\n    onFilter = (filter) => {\n        this.setState({filter});\n    };\n\n    filter = (items, filter) => {\n        switch (filter) {\n            case 'all':\n                return items;\n            case 'active':\n                return items.filter(item => !item.done);\n            case 'done':\n                return items.filter(item => item.done);\n            default :\n                return items;\n        }\n    };\n\n    onSearchChange = (searchText) => {\n        this.setState({searchText});\n    };\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++,\n        };\n    };\n\n    deleteItem = (id) => {\n        this.setState(({todoData}) => {\n            const idx = todoData.findIndex((el) => el.id === id);\n            const newTodos = [\n                ...todoData.slice(0, idx),\n                ...todoData.slice(idx + 1),\n            ];\n\n            return {\n                todoData: newTodos,\n            }\n        })\n    };\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text);\n\n        this.setState(({todoData}) => {\n            return {\n                todoData: [...todoData, newItem],\n            }\n        });\n    };\n\n    onToggleDone = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done'),\n            }\n        });\n    };\n\n    onToggleImportant = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'important'),\n            }\n        });\n    };\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id);\n\n        const oldItem = arr[idx];\n        const newItem = {\n            ...oldItem,\n            [propName]: !oldItem[propName],\n        };\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1),\n        ];\n    }\n\n    search(items, searchText) {\n        if(searchText === '') {\n            return items;\n        }\n        return items.filter(item => {\n            return item.label.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\n        })\n    }\n\n    render() {\n        const {todoData, searchText, filter} = this.state;\n        const visibleItems = this.filter(\n            this.search(todoData, searchText), filter);\n        const doneCount = todoData.filter((el) => el.done).length;\n        const todoCount = todoData.length - doneCount;\n\n        return (\n            <div className={'app'}>\n                <AppHeader todo={todoCount} done={doneCount}/>\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel\n                        onSearchChange={this.onSearchChange}\n                    />\n                    <ItemStatusFilter\n                        filter={filter}\n                        onFilter={this.onFilter}\n                    />\n                </div>\n                <TodoList\n                    todos={visibleItems}\n                    onDeleted={this.deleteItem}\n                    onToggleDone={this.onToggleDone}\n                    onToggleImportant={this.onToggleImportant}\n                />\n                <ItemAddForm\n                    onAdd={this.addItem}\n                />\n            </div>\n        )\n    }\n\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}